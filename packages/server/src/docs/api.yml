openapi: 3.0.1
info:
    title: Sommelier Impermanent Loss App
    description: üç∑ The Finest AMM Tools for LPs 
    version: 1.0.0
servers:
    - url: /api/v1
tags:
    - name: Uniswap
      description: Uniswap-specific API routes.
    - name: Sommelier 
      description: Routes for IL management via the Sommelier Protocol.
paths:
    /uniswap/ethPrice:
        get:
            tags:
                - Uniswap
            description: Get the current price of ETH.
            responses:
                200:
                    description: Returns the price of ETH.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: object
                                        properties: 
                                            ethPrice:
                                                type: string
                                                example: "1104.306304294875977668569909674183"
    /uniswap/pairs:
        get:
            tags:
                - Uniswap
            description: List pairs on Uniswap.
            parameters:
                -   in: query
                    name: count
                    example: 100
                    schema:
                        type: integer
                        minimum: 1
                        maximum: 1000
                    description: Number of pairs to fetch.
            responses:
                400:
                    description: Invalid 'count' parameter.
                200:
                    description: Returns a list of pairs.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items: 
                                            $ref: './models.yml#/components/schemas/UniswapPair'
    /uniswap/pairs/{id}:
        get:
            tags:
                - Uniswap
            description: Get details for a pair on Uniwap.
            parameters:
                -   in: path
                    name: id
                    description: The contract address of the pair.
                    example: "0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"
                    required: true
                    schema:
                        type: string
            responses:
                400:
                    description: Invalid ETH address sent for 'id'.
                404:
                    description: Pair with given 'id' not found.
                200:
                    description: Returns an overview for the specified pair.
                    content:
                        application/json:
                            schema:
                                $ref: './models.yml#/components/schemas/UniswapPair'
    /uniswap/pairs/{id}/swaps:
        get:
            tags:
                - Uniswap
            description: Get up to 100 most recent swaps for a pair on Uniswap.
            parameters:
                -   in: path
                    name: id
                    description: The contract address of the pair.
                    example: "0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"
                    required: true
                    schema:
                        type: string
            responses:
                400:
                    description: Invalid ETH address sent for 'id'.
                404:
                    description: No swaps found for pair with given 'id'.
                200:
                    description: Returns up to 100 most recent swaps for a given pair.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items: 
                                            $ref: './models.yml#/components/schemas/UniswapSwap'
    /uniswap/pairs/{id}/addremove:
        get:
            tags:
                - Uniswap
            description: Get up to 100 most mints or burns (liquidity changes) for a pair on Uniswap.
            parameters:
                -   in: path
                    name: id
                    example: "0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"
                    description: The contract address of the pair.
                    required: true
                    schema:
                        type: string
            responses:
                400:
                    description: Invalid ETH address sent for 'id'.
                404:
                    description: No mints or burns found for pair with given 'id'.
                200:
                    description: Returns up to 100 most recent mints and burns for a given pair, along with a combined list.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items: 
                                            $ref: './models.yml#/components/schemas/UniswapMintOrBurn'
    /uniswap/pairs/{id}/historical:
        get:
            tags:
                - Uniswap
            description: Get historical daily data for a pair on Uniswap.
            parameters:
                -   in: path
                    name: id
                    description: The contract address of the pair.
                    example: "0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"
                    required: true
                    schema:
                        type: string
                -   in: query
                    name: startDate
                    description: The start date for the historical data window, in YYYY-MM-DD format.
                    example: "2021-01-01"
                    required: true
                    schema:
                        type: string
                -   in: query
                    name: endDate
                    description: The end date for the historical data window, in YYYY-MM-DD format. Defaults to present.
                    example: "2021-01-07"
                    schema:
                        type: string
            responses:
                400:
                    description: Invalid ETH address sent for 'id', 'startDate' not provided, invalid 'startDate' or 'endDate'.
                404:
                    description: No historical data for the given timeframe. Check that the window is at least one day.
                200:
                    description: Returns daily historical data in the specified window.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items: 
                                            $ref: './models.yml#/components/schemas/UniswapDailyData'
    /uniswap/pairs/{id}/stats:
        get:
            tags:
                - Uniswap
                - Sommelier
            description: Get statistics over a given time frame for an LP position.
            parameters:
                -   in: path
                    name: id
                    description: The contract address of the pair.
                    example: "0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"
                    required: true
                    schema:
                        type: string
                -   in: query
                    name: startDate
                    description: The start date for the historical data window, in YYYY-MM-DD format.
                    example: "2021-01-01"
                    required: true
                    schema:
                        type: string
                -   in: query
                    name: endDate
                    description: The end date for the historical data window, in YYYY-MM-DD format. Defaults to present.
                    example: "2021-01-07"
                    schema:
                        type: string
                -   in: query
                    name: lpLiquidityUSD
                    description: The amount of liquidity provided by the LP in USD value.
                    required: true
                    example: 10000
                    schema:
                        type: number
                        minimum: 0
            responses:
                400:
                    description: Parameter 'startDate' not provided, invalid 'startDate' or 'endDate', 'lpLiquidityUSD' not provided or not a positive integer.
                404:
                    description: No historical data for the given timeframe. Check that the window is at least one day.
                200:
                    description: Returns aggregated stats for the LP positino.
                    content:
                        application/json:
                            schema:
                                $ref: "models.yml#/components/schemas/LPStatsForPair"

    /uniswap/market:
        get:
            tags:
                - Uniswap
                - Sommelier
            description: Get an market overview of the top pairs and stats on return and impermanent loss.
            parameters:
                -   in: query
                    name: startDate
                    description: The start date for the market stats window, in YYYY-MM-DD format.
                    example: "2021-01-01"
                    required: true
                    schema:
                        type: string
                -   in: query
                    name: endDate
                    description: The end date for the historical data window, in YYYY-MM-DD format. Defaults to present.
                    example: "2021-01-07"
                    schema:
                        type: string
            responses:
                400:
                    description: Parameter 'startDate' not provided, invalid 'startDate' or 'endDate'.
                404:
                    description: No statistical data for the given timeframe. Check that the window is at least one day.
                200:
                    description: Returns return and impermanent loss stats for top 25 pairs.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: array
                                        items: 
                                            $ref: './models.yml#/components/schemas/MarketStatsForPair'
    /spec:
        get:
            tags:
                - Specification
            responses:
                200:
                    description: Returns the API specification.
                    content: {}



                        

                
                



